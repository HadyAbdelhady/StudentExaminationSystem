// <auto-generated />
using System;
using Examination_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examination_System.Migrations
{
    [DbContext(typeof(StudentExaminationSystemContext))]
    partial class StudentExaminationSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.HasKey("CourseId", "InstructorId")
                        .HasName("PK__Course_I__7AAB5053D51FA578");

                    b.HasIndex("InstructorId");

                    b.ToTable("Course_Instructor", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EstablishmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("establishmentDate");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__Branch__3214EC27006B4EAE");

                    b.HasIndex(new[] { "ManagerId" }, "UQ__Branch__3BA2AA8068ED412E")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "UQ__Branch__737584F6716EF5C9")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Branch__B43B145FED3E75ED")
                        .IsUnique();

                    b.ToTable("Branch", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.BranchDepartmentTrack", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("trackID");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branchID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<DateTime>("DepartementManagerJoinDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentManagerId")
                        .HasColumnType("int")
                        .HasColumnName("departmentManagerID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<int>("TrackManagerId")
                        .HasColumnType("int")
                        .HasColumnName("trackManagerID");

                    b.Property<DateTime>("TrackManagerJoinDate")
                        .HasColumnType("datetime");

                    b.HasKey("TrackId", "DepartmentId", "BranchId")
                        .HasName("PK__Branch_D__A45B644BF51F4CEB");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentManagerId");

                    b.HasIndex("TrackManagerId");

                    b.ToTable("Branch_Department_Track", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Course__3214EC275B31593B");

                    b.HasIndex(new[] { "Name" }, "UQ__Course__737584F61367C110")
                        .IsUnique();

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.CourseField", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<string>("Field")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("field");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.HasKey("CourseId", "Field")
                        .HasName("PK__Course_F__FA0A049F1690AEBE");

                    b.ToTable("Course_Field", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.CourseStudentInstructor", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentID");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("CourseId", "StudentId", "InstructorId")
                        .HasName("PK__Course_S__DB79636E7F0F3647");

                    b.HasIndex("InstructorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Course_Student_Instructor", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.CourseTopic", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<string>("Topic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("topic");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.HasKey("CourseId", "Topic")
                        .HasName("PK__Course_T__5613C55F38A13EE0");

                    b.ToTable("Course_Topic", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Departme__3214EC27F1174726");

                    b.HasIndex(new[] { "Name" }, "UQ__Departme__737584F653CD3C1A")
                        .IsUnique();

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.DepartmentInstructor", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime")
                        .HasColumnName("joinDate");

                    b.HasKey("DepartmentId", "InstructorId")
                        .HasName("PK__Departme__A9BB2BEFC5DA4CD5");

                    b.HasIndex("InstructorId");

                    b.ToTable("Department_Instructor", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.ExamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.HasKey("Id")
                        .HasName("PK__ExamMode__3214EC27B24958E0");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("ExamModel", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.ExamModelQuestion", b =>
                {
                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.Property<string>("CorrectChoice")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("correctChoice");

                    b.Property<int>("Mark")
                        .HasColumnType("int")
                        .HasColumnName("mark");

                    b.HasKey("ExamModelId", "QuestionId")
                        .HasName("PK__ExamMode__35117C44B0348E50");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamModel_Question", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("enrollmentDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("gender");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("lastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SSN");

                    b.HasKey("Id")
                        .HasName("PK__Instruct__3214EC27615FFC41");

                    b.HasIndex(new[] { "Email" }, "UQ__Instruct__AB6E6164FDC0C5F7")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Instruct__B43B145F2BC98A4C")
                        .IsUnique();

                    b.HasIndex(new[] { "Ssn" }, "UQ__Instruct__CA1E8E3CD05AFC45")
                        .IsUnique();

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.QuestionBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorrectChoice")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("correctChoice");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<DateTime?>("InsertionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertionDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("questionText");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC27602A1141");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("QuestionBank", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.QuestionBankChoice", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.Property<string>("Choice")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.HasKey("QuestionId", "Choice")
                        .HasName("PK__Question__90F6A66A39E34133");

                    b.ToTable("QuestionBank_Choice", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branchID");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("enrollmentDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("lastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SSN");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("trackID");

                    b.HasKey("Id")
                        .HasName("PK__Student__3214EC270133B1E4");

                    b.HasIndex("TrackId", "DepartmentId", "BranchId");

                    b.HasIndex(new[] { "Email" }, "UQ__Student__AB6E6164EA4F3A50")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Student__B43B145F789254A2")
                        .IsUnique();

                    b.HasIndex(new[] { "Ssn" }, "UQ__Student__CA1E8E3CC2644154")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.StudentSubmit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentID");

                    b.Property<DateTime?>("SubmitDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("submitDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__StudentS__3214EC2765B8348D");

                    b.HasIndex("ExamModelId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSubmit", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.StudentSubmitAnswer", b =>
                {
                    b.Property<int>("StudentSubmitId")
                        .HasColumnType("int")
                        .HasColumnName("StudentSubmitID");

                    b.Property<string>("StudentAnswer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("studentAnswer");

                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.HasKey("StudentSubmitId", "StudentAnswer")
                        .HasName("PK__StudentS__660F8DE877CAD984");

                    b.HasIndex("ExamModelId", "QuestionId");

                    b.ToTable("StudentSubmit_Answer", (string)null);
                });

            modelBuilder.Entity("Examination_System.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Track__3214EC27FD2C4C89");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Name" }, "UQ__Track__737584F6EBD40B58")
                        .IsUnique();

                    b.ToTable("Track", (string)null);
                });

            modelBuilder.Entity("TrackCourse", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("trackID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.HasKey("TrackId", "CourseId")
                        .HasName("PK__Track_Co__571F7D4D247BC863");

                    b.HasIndex("CourseId");

                    b.ToTable("Track_Course", (string)null);
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("Examination_System.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_In__cours__0F624AF8");

                    b.HasOne("Examination_System.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_In__instr__10566F31");
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.HasOne("Examination_System.Models.Instructor", "Manager")
                        .WithOne("Branch")
                        .HasForeignKey("Examination_System.Models.Branch", "ManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch__ManagerI__4222D4EF");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Examination_System.Models.BranchDepartmentTrack", b =>
                {
                    b.HasOne("Examination_System.Models.Branch", "Branch")
                        .WithMany("BranchDepartmentTracks")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch_De__branc__5070F446");

                    b.HasOne("Examination_System.Models.Department", "Department")
                        .WithMany("BranchDepartmentTracks")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch_De__depar__52593CB8");

                    b.HasOne("Examination_System.Models.Instructor", "DepartmentManager")
                        .WithMany("BranchDepartmentTrackDepartmentManagers")
                        .HasForeignKey("DepartmentManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch_De__depar__534D60F1");

                    b.HasOne("Examination_System.Models.Track", "Track")
                        .WithMany("BranchDepartmentTracks")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch_De__track__5165187F");

                    b.HasOne("Examination_System.Models.Instructor", "TrackManager")
                        .WithMany("BranchDepartmentTrackTrackManagers")
                        .HasForeignKey("TrackManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Branch_De__track__5441852A");

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("DepartmentManager");

                    b.Navigation("Track");

                    b.Navigation("TrackManager");
                });

            modelBuilder.Entity("Examination_System.Models.CourseField", b =>
                {
                    b.HasOne("Examination_System.Models.Course", "Course")
                        .WithMany("CourseFields")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_Fi__cours__797309D9");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Examination_System.Models.CourseStudentInstructor", b =>
                {
                    b.HasOne("Examination_System.Models.Course", "Course")
                        .WithMany("CourseStudentInstructors")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_St__cours__0A9D95DB");

                    b.HasOne("Examination_System.Models.Instructor", "Instructor")
                        .WithMany("CourseStudentInstructors")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_St__instr__0C85DE4D");

                    b.HasOne("Examination_System.Models.Student", "Student")
                        .WithMany("CourseStudentInstructors")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_St__stude__0B91BA14");

                    b.Navigation("Course");

                    b.Navigation("Instructor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Examination_System.Models.CourseTopic", b =>
                {
                    b.HasOne("Examination_System.Models.Course", "Course")
                        .WithMany("CourseTopics")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Course_To__cours__74AE54BC");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Examination_System.Models.DepartmentInstructor", b =>
                {
                    b.HasOne("Examination_System.Models.Department", "Department")
                        .WithMany("DepartmentInstructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Departmen__depar__17036CC0");

                    b.HasOne("Examination_System.Models.Instructor", "Instructor")
                        .WithMany("DepartmentInstructors")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Departmen__instr__17F790F9");

                    b.Navigation("Department");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Examination_System.Models.ExamModel", b =>
                {
                    b.HasOne("Examination_System.Models.Course", "Course")
                        .WithMany("ExamModels")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__Cours__6B24EA82");

                    b.HasOne("Examination_System.Models.Instructor", "Instructor")
                        .WithMany("ExamModels")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__instr__6C190EBB");

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Examination_System.Models.ExamModelQuestion", b =>
                {
                    b.HasOne("Examination_System.Models.ExamModel", "ExamModel")
                        .WithMany("ExamModelQuestions")
                        .HasForeignKey("ExamModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__examM__02084FDA");

                    b.HasOne("Examination_System.Models.QuestionBank", "Question")
                        .WithMany("ExamModelQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__quest__02FC7413");

                    b.Navigation("ExamModel");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Examination_System.Models.QuestionBank", b =>
                {
                    b.HasOne("Examination_System.Models.Course", "Course")
                        .WithMany("QuestionBanks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__cours__656C112C");

                    b.HasOne("Examination_System.Models.Instructor", "Instructor")
                        .WithMany("QuestionBanks")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__instr__6477ECF3");

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Examination_System.Models.QuestionBankChoice", b =>
                {
                    b.HasOne("Examination_System.Models.QuestionBank", "Question")
                        .WithMany("QuestionBankChoices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__quest__7F2BE32F");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.HasOne("Examination_System.Models.BranchDepartmentTrack", "BranchDepartmentTrack")
                        .WithMany("Students")
                        .HasForeignKey("TrackId", "DepartmentId", "BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Student__5AEE82B9");

                    b.Navigation("BranchDepartmentTrack");
                });

            modelBuilder.Entity("Examination_System.Models.StudentSubmit", b =>
                {
                    b.HasOne("Examination_System.Models.ExamModel", "ExamModel")
                        .WithMany("StudentSubmits")
                        .HasForeignKey("ExamModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__examM__70DDC3D8");

                    b.HasOne("Examination_System.Models.Student", "Student")
                        .WithMany("StudentSubmits")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__stude__6FE99F9F");

                    b.Navigation("ExamModel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Examination_System.Models.StudentSubmitAnswer", b =>
                {
                    b.HasOne("Examination_System.Models.StudentSubmit", "StudentSubmit")
                        .WithMany("StudentSubmitAnswers")
                        .HasForeignKey("StudentSubmitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__Stude__06CD04F7");

                    b.HasOne("Examination_System.Models.ExamModelQuestion", "ExamModelQuestion")
                        .WithMany("StudentSubmitAnswers")
                        .HasForeignKey("ExamModelId", "QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSubmit_An__07C12930");

                    b.Navigation("ExamModelQuestion");

                    b.Navigation("StudentSubmit");
                });

            modelBuilder.Entity("Examination_System.Models.Track", b =>
                {
                    b.HasOne("Examination_System.Models.Department", "Department")
                        .WithMany("Tracks")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Track__departmen__4BAC3F29");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrackCourse", b =>
                {
                    b.HasOne("Examination_System.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Track_Cou__cours__14270015");

                    b.HasOne("Examination_System.Models.Track", null)
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Track_Cou__track__1332DBDC");
                });

            modelBuilder.Entity("Examination_System.Models.Branch", b =>
                {
                    b.Navigation("BranchDepartmentTracks");
                });

            modelBuilder.Entity("Examination_System.Models.BranchDepartmentTrack", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Examination_System.Models.Course", b =>
                {
                    b.Navigation("CourseFields");

                    b.Navigation("CourseStudentInstructors");

                    b.Navigation("CourseTopics");

                    b.Navigation("ExamModels");

                    b.Navigation("QuestionBanks");
                });

            modelBuilder.Entity("Examination_System.Models.Department", b =>
                {
                    b.Navigation("BranchDepartmentTracks");

                    b.Navigation("DepartmentInstructors");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Examination_System.Models.ExamModel", b =>
                {
                    b.Navigation("ExamModelQuestions");

                    b.Navigation("StudentSubmits");
                });

            modelBuilder.Entity("Examination_System.Models.ExamModelQuestion", b =>
                {
                    b.Navigation("StudentSubmitAnswers");
                });

            modelBuilder.Entity("Examination_System.Models.Instructor", b =>
                {
                    b.Navigation("Branch");

                    b.Navigation("BranchDepartmentTrackDepartmentManagers");

                    b.Navigation("BranchDepartmentTrackTrackManagers");

                    b.Navigation("CourseStudentInstructors");

                    b.Navigation("DepartmentInstructors");

                    b.Navigation("ExamModels");

                    b.Navigation("QuestionBanks");
                });

            modelBuilder.Entity("Examination_System.Models.QuestionBank", b =>
                {
                    b.Navigation("ExamModelQuestions");

                    b.Navigation("QuestionBankChoices");
                });

            modelBuilder.Entity("Examination_System.Models.Student", b =>
                {
                    b.Navigation("CourseStudentInstructors");

                    b.Navigation("StudentSubmits");
                });

            modelBuilder.Entity("Examination_System.Models.StudentSubmit", b =>
                {
                    b.Navigation("StudentSubmitAnswers");
                });

            modelBuilder.Entity("Examination_System.Models.Track", b =>
                {
                    b.Navigation("BranchDepartmentTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
