@model Examination_System.DTOs.InsertQuestion

@{
    ViewData["Title"] = "Create Question";
}

@section Style {
    <style>

        body {
            background: #F0ECE5;
            min-height: 100vh;
            font-family: "lora", serif;
        }
        /* Embedded CSS from style.css */
        .card-container {
            display: flex;
            justify-content: center;
            align-items: start;
            padding: 1rem;
            max-width: 100%;
            /* max-width: 1000px; */
        }

        .card {
            border: none;
            border-radius: 12px;
            background-color: white;
           transition: transform 0.2s ease;
            margin: 1rem 0;
            width: 50%;
            flex-shrink: 1;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

            .card:hover {
                transform: translateY(-5px);
                border: #31304D;
                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.5);
            }

        .card-body {
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: .75rem;
        }

        .form-control {
            padding: 0.8rem;
            border: 1px solid #ced4da;
            border-radius: 6px;
            font-size: 1rem;
            transition: all 0.3s ease;
            resize: none;
            overflow-y: hidden;
            min-height: 50px;
        }

            .form-control::placeholder {
                color: rgba(142, 134, 134, 0.7) !important;
                opacity: 1;
            }


        .btn {
            background: linear-gradient(135deg, #31304D 0%, #161A30 100%);
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(76, 81, 191, 0.2);
            transition: all 0.3s ease;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            font-size: 19px;
        }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(76, 81, 191, 0.3);
                color: white;
                background: #31304D ;
            }

        .radio-option {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            width: 100%;
        }

            .radio-option input[type="radio"] {
                align-self: center;
                margin: 0;
            }

        .radio-option {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            width: 100%;
        }

            .radio-option .form-control {
                flex-grow: 1;
                padding: 0.6rem;
                line-height: 1.4;
                margin: 2px 0;
                max-width: 100%;
            }

        .radio-column {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            width: 100%;
        }

        .radio-group {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: space-between;
            margin-top: 1rem;
        }

        /* True/False radio group */
        .radio-group-tf {
            display: none;
            flex-direction: row;
            gap: 5rem;
            margin-top: 1rem;
        }

        /* Keep existing radio styles */
        input[type="radio"] {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border: 2px solid #cbd5e0;
            border-radius: 50%;
            cursor: pointer;
            flex-shrink: 0;
        }

            input[type="radio"]:checked {
                border-color: #31304D;
                background-color: #31304D;
                background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='8' cy='8' r='3'/%3E%3C/svg%3E");
            }

        #multipleChoice {
            display: none;
        }

        @@media(min - width:935px) {
            .radio-column

        {
            width: 48%;
        }

        }
        @@media(max - width:620px) {
            .questionType

        {
            flex-direction: column;
            gap: 2rem;
        }

        }
        @@media(max - width:520px) {
            .radio-group-tf

        {
            flex-direction: column;
            gap: 2rem;
        }

        }


        @@media (min-width: 768px) and (max-width: 1420px) {
            label

        {
            display: flex;
            flex-wrap: wrap !important;
        }

        }

        label {
            padding: 0 !important;
        }

        label {
            font-weight: 600;
        }

            label[for = "question"] {
                margin-top: 10px;
                margin-bottom: 0;
                font-size: 19px;
            }

    </style>
}

<div class="card-container">
    <div class="card">
        <div class="card-body">
            <h1 class="card-title text-center">Insert Question</h1>

            <form asp-action="Create" method="post" class="form-group" id="questionForm">
                <!-- Question Type -->
                <div class="radio-group-tf questionType" style="display: flex;">
                    <div class="radio-option">
                        <input type="radio" id="tfToggle" class="mr-1" name="QuestionData.Type" value="TrueOrFalse" />
                        <label for="tfToggle" class="col-md-5 mb-0">True/False</label>
                    </div>
                    <div class="radio-option">
                        <input type="radio" id="mcqToggle" class="mr-1" name="QuestionData.Type" value="MultipleChoice" />
                        <label for="mcqToggle" class="col-md-5 mb-0 text-nowrap">MCQ</label>
                    </div>
                </div>
                <span asp-validation-for="QuestionData.Type" class="text-danger"></span>

                <!-- Question Text -->
                <label for="question">Question</label>
                <textarea class="form-control" id="question" name="QuestionData.QuestionText" placeholder="Enter the question" required></textarea>
                <span asp-validation-for="QuestionData.QuestionText" class="text-danger"></span>

                <!-- Multiple Choice Answers -->
                <div class="radio-group" id="multipleChoice">
                    <div class="radio-column">
                        <div class="radio-option">
                            <input type="radio" id="correctAnswer1" name="QuestionData.CorrectChoice" data-choice-text="a1" />
                            <textarea class="form-control answer-input" id="a1" name="Choices[0].Choice" placeholder="Answer 1" required></textarea>
                        </div>
                        <div class="radio-option">
                            <input type="radio" id="correctAnswer2" name="QuestionData.CorrectChoice" data-choice-text="a2" />
                            <textarea class="form-control answer-input" id="a2" name="Choices[1].Choice" placeholder="Answer 2" required></textarea>
                        </div>
                    </div>

                    <div class="radio-column">
                        <div class="radio-option">
                            <input type="radio" id="correctAnswer3" name="QuestionData.CorrectChoice" data-choice-text="a3" />
                            <textarea class="form-control answer-input" id="a3" name="Choices[2].Choice" placeholder="Answer 3" required></textarea>
                        </div>
                        <div class="radio-option">
                            <input type="radio" id="correctAnswer4" name="QuestionData.CorrectChoice" data-choice-text="a4" />
                            <textarea class="form-control answer-input" id="a4" name="Choices[3].Choice" placeholder="Answer 4" required></textarea>
                        </div>
                    </div>
                </div>
                <span asp-validation-for="QuestionData.CorrectChoice" class="text-danger"></span>

                <!-- True/False Answers -->
                <div class="radio-group-tf" id="trueFalse">
                    <div class="radio-option">
                        <input type="radio" id="trueAnswer" name="QuestionData.CorrectChoice" value="True" />
                        <label for="trueAnswer">True</label>
                    </div>
                    <div class="radio-option">
                        <input type="radio" id="falseAnswer" name="QuestionData.CorrectChoice" value="False" />
                        <label for="falseAnswer">False</label>
                    </div>
                </div>
                <span asp-validation-for="QuestionData.CorrectChoice" class="text-danger"></span>

                <!-- Hidden fields for InstructorId and CourseId -->
                <input type="hidden" asp-for="QuestionData.InstructorId" value="@Model.QuestionData.InstructorId" />
                <input type="hidden" asp-for="QuestionData.CourseId" value="@Model.QuestionData.CourseId" />

                <!-- Hidden fields for Choices (True/False) -->
                <input type="hidden" id="trueChoice" name="Choices[0].Choice" value="True" />
                <input type="hidden" id="falseChoice" name="Choices[1].Choice" value="False" />

                <button type="submit" class="btn">Submit Question</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const tfToggle = document.getElementById('tfToggle');
        const mcqToggle = document.getElementById('mcqToggle');
        const multipleChoice = document.getElementById('multipleChoice');
        const trueFalse = document.getElementById('trueFalse');
        const trueChoice = document.getElementById('trueChoice');
        const falseChoice = document.getElementById('falseChoice');
        const questionForm = document.getElementById('questionForm');

        // Toggle between True/False and MCQ
        tfToggle.addEventListener('change', function () {
            if (this.checked) {
                multipleChoice.style.display = 'none';
                trueFalse.style.display = 'flex';
                // Disable MCQ choices
                document.querySelectorAll('.answer-input').forEach(input => input.disabled = true);
                // Enable True/False choices
                trueChoice.disabled = false;
                falseChoice.disabled = false;
            }
        });

        mcqToggle.addEventListener('change', function () {
            if (this.checked) {
                multipleChoice.style.display = 'flex';
                trueFalse.style.display = 'none';
                // Enable MCQ choices
                document.querySelectorAll('.answer-input').forEach(input => input.disabled = false);
                // Disable True/False choices
                trueChoice.disabled = true;
                falseChoice.disabled = true;
            }
        });

        // Auto-expanding textareas
        function autoResize() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        }

        // Initialize for all textareas
        document.querySelectorAll('.form-control').forEach(textarea => {
            textarea.addEventListener('input', autoResize);
            autoResize.call(textarea);
        });

        // Update the correct choice value to the text of the selected answer
        document.querySelectorAll('input[name="QuestionData.CorrectChoice"]').forEach(radio => {
            radio.addEventListener('change', function () {
                if (this.dataset.choiceText) {
                    const textarea = document.getElementById(this.dataset.choiceText);
                    this.value = textarea.value;
                }
            });
        });

        // Handle form submission
        questionForm.addEventListener('submit', function (e) {
            if (tfToggle.checked) {
                // For True/False questions, ensure the Choices list contains "True" and "False"
                trueChoice.value = "True";
                falseChoice.value = "False";
            }
        });
    </script>
}